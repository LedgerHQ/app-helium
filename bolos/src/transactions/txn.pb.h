/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_HELIUM_TXNS_TXN_PB_H_INCLUDED
#define PB_HELIUM_TXNS_TXN_PB_H_INCLUDED
#include <pb.h>

#include "v1/txn_coinbase_v1.pb.h"

#include "v1/txn_security_coinbase_v1.pb.h"

#include "v1/txn_oui_v1.pb.h"

#include "v1/txn_gen_gateway_v1.pb.h"

#include "v1/txn_routing_v1.pb.h"

#include "v1/txn_payment_v1.pb.h"

#include "v1/txn_security_exchange_v1.pb.h"

#include "v1/txn_consensus_group_v1.pb.h"

#include "v1/txn_add_gateway_v1.pb.h"

#include "v1/txn_assert_location_v1.pb.h"

#include "v1/txn_create_htlc_v1.pb.h"

#include "v1/txn_redeem_htlc_v1.pb.h"

#include "v1/txn_poc_request_v1.pb.h"

#include "v1/txn_poc_receipts_v1.pb.h"

#include "v1/txn_vars_v1.pb.h"

#include "v1/txn_rewards_v1.pb.h"

#include "v1/txn_token_burn_v1.pb.h"

#include "v1/txn_dc_coinbase_v1.pb.h"

#include "v1/txn_token_burn_exchange_rate_v1.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _helium_txns_txn {
    pb_size_t which_txn;
    union {
        helium_txns_txn_add_gateway_v1 add_gateway;
        helium_txns_txn_assert_location_v1 assert_location;
        helium_txns_txn_coinbase_v1 coinbase;
        helium_txns_txn_create_htlc_v1 create_htlc;
        helium_txns_txn_gen_gateway_v1 gen_gateway;
        helium_txns_txn_consensus_group_v1 consensus_group;
        helium_txns_txn_oui_v1 oui;
        helium_txns_txn_payment_v1 payment;
        helium_txns_txn_poc_receipts_v1 poc_receipts;
        helium_txns_txn_poc_request_v1 poc_request;
        helium_txns_txn_redeem_htlc_v1 redeem_htlc;
        helium_txns_txn_security_coinbase_v1 security_coinbase;
        helium_txns_txn_routing_v1 routing;
        helium_txns_txn_security_exchange_v1 security_exchange;
        helium_txns_txn_vars_v1 vars;
        helium_txns_txn_rewards_v1 rewards;
        helium_txns_txn_token_burn_v1 token_burn;
        helium_txns_txn_dc_coinbase_v1 dc_coinbase;
        helium_txns_txn_token_burn_exchange_rate_v1 token_burn_exchange_rate;
    } txn;
/* @@protoc_insertion_point(struct:helium_txns_txn) */
} helium_txns_txn;


/* Initializer values for message structs */
#define helium_txns_txn_init_default             {0, {helium_txns_txn_add_gateway_v1_init_default}}
#define helium_txns_txn_init_zero                {0, {helium_txns_txn_add_gateway_v1_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define helium_txns_txn_add_gateway_tag          1
#define helium_txns_txn_assert_location_tag      2
#define helium_txns_txn_coinbase_tag             3
#define helium_txns_txn_create_htlc_tag          4
#define helium_txns_txn_gen_gateway_tag          5
#define helium_txns_txn_consensus_group_tag      6
#define helium_txns_txn_oui_tag                  7
#define helium_txns_txn_payment_tag              8
#define helium_txns_txn_poc_receipts_tag         9
#define helium_txns_txn_poc_request_tag          10
#define helium_txns_txn_redeem_htlc_tag          11
#define helium_txns_txn_security_coinbase_tag    12
#define helium_txns_txn_routing_tag              13
#define helium_txns_txn_security_exchange_tag    14
#define helium_txns_txn_vars_tag                 15
#define helium_txns_txn_rewards_tag              16
#define helium_txns_txn_token_burn_tag           17
#define helium_txns_txn_dc_coinbase_tag          18
#define helium_txns_txn_token_burn_exchange_rate_tag 19

/* Struct field encoding specification for nanopb */
#define helium_txns_txn_FIELDLIST(X, a) \
X(a, STATIC, ONEOF, MESSAGE, (txn,add_gateway,txn.add_gateway), 1) \
X(a, STATIC, ONEOF, MESSAGE, (txn,assert_location,txn.assert_location), 2) \
X(a, STATIC, ONEOF, MESSAGE, (txn,coinbase,txn.coinbase), 3) \
X(a, STATIC, ONEOF, MESSAGE, (txn,create_htlc,txn.create_htlc), 4) \
X(a, STATIC, ONEOF, MESSAGE, (txn,gen_gateway,txn.gen_gateway), 5) \
X(a, STATIC, ONEOF, MESSAGE, (txn,consensus_group,txn.consensus_group), 6) \
X(a, STATIC, ONEOF, MESSAGE, (txn,oui,txn.oui), 7) \
X(a, STATIC, ONEOF, MESSAGE, (txn,payment,txn.payment), 8) \
X(a, STATIC, ONEOF, MESSAGE, (txn,poc_receipts,txn.poc_receipts), 9) \
X(a, STATIC, ONEOF, MESSAGE, (txn,poc_request,txn.poc_request), 10) \
X(a, STATIC, ONEOF, MESSAGE, (txn,redeem_htlc,txn.redeem_htlc), 11) \
X(a, STATIC, ONEOF, MESSAGE, (txn,security_coinbase,txn.security_coinbase), 12) \
X(a, STATIC, ONEOF, MESSAGE, (txn,routing,txn.routing), 13) \
X(a, STATIC, ONEOF, MESSAGE, (txn,security_exchange,txn.security_exchange), 14) \
X(a, STATIC, ONEOF, MESSAGE, (txn,vars,txn.vars), 15) \
X(a, STATIC, ONEOF, MESSAGE, (txn,rewards,txn.rewards), 16) \
X(a, STATIC, ONEOF, MESSAGE, (txn,token_burn,txn.token_burn), 17) \
X(a, STATIC, ONEOF, MESSAGE, (txn,dc_coinbase,txn.dc_coinbase), 18) \
X(a, STATIC, ONEOF, MESSAGE, (txn,token_burn_exchange_rate,txn.token_burn_exchange_rate), 19)
#define helium_txns_txn_CALLBACK NULL
#define helium_txns_txn_DEFAULT NULL
#define helium_txns_txn_txn_add_gateway_MSGTYPE helium_txns_txn_add_gateway_v1
#define helium_txns_txn_txn_assert_location_MSGTYPE helium_txns_txn_assert_location_v1
#define helium_txns_txn_txn_coinbase_MSGTYPE helium_txns_txn_coinbase_v1
#define helium_txns_txn_txn_create_htlc_MSGTYPE helium_txns_txn_create_htlc_v1
#define helium_txns_txn_txn_gen_gateway_MSGTYPE helium_txns_txn_gen_gateway_v1
#define helium_txns_txn_txn_consensus_group_MSGTYPE helium_txns_txn_consensus_group_v1
#define helium_txns_txn_txn_oui_MSGTYPE helium_txns_txn_oui_v1
#define helium_txns_txn_txn_payment_MSGTYPE helium_txns_txn_payment_v1
#define helium_txns_txn_txn_poc_receipts_MSGTYPE helium_txns_txn_poc_receipts_v1
#define helium_txns_txn_txn_poc_request_MSGTYPE helium_txns_txn_poc_request_v1
#define helium_txns_txn_txn_redeem_htlc_MSGTYPE helium_txns_txn_redeem_htlc_v1
#define helium_txns_txn_txn_security_coinbase_MSGTYPE helium_txns_txn_security_coinbase_v1
#define helium_txns_txn_txn_routing_MSGTYPE helium_txns_txn_routing_v1
#define helium_txns_txn_txn_security_exchange_MSGTYPE helium_txns_txn_security_exchange_v1
#define helium_txns_txn_txn_vars_MSGTYPE helium_txns_txn_vars_v1
#define helium_txns_txn_txn_rewards_MSGTYPE helium_txns_txn_rewards_v1
#define helium_txns_txn_txn_token_burn_MSGTYPE helium_txns_txn_token_burn_v1
#define helium_txns_txn_txn_dc_coinbase_MSGTYPE helium_txns_txn_dc_coinbase_v1
#define helium_txns_txn_txn_token_burn_exchange_rate_MSGTYPE helium_txns_txn_token_burn_exchange_rate_v1

extern const pb_msgdesc_t helium_txns_txn_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define helium_txns_txn_fields &helium_txns_txn_msg

/* Maximum encoded size of messages (where known) */
#define helium_txns_txn_size                     (5 + sizeof(union{char f0[172]; char f1[helium_txns_txn_add_gateway_v1_size]; char f2[helium_txns_txn_assert_location_v1_size]; char f3[helium_txns_txn_coinbase_v1_size]; char f4[helium_txns_txn_create_htlc_v1_size]; char f5[helium_txns_txn_gen_gateway_v1_size]; char f6[helium_txns_txn_consensus_group_v1_size]; char f7[helium_txns_txn_oui_v1_size]; char f9[helium_txns_txn_poc_receipts_v1_size]; char f10[helium_txns_txn_poc_request_v1_size]; char f11[helium_txns_txn_redeem_htlc_v1_size]; char f12[helium_txns_txn_security_coinbase_v1_size]; char f13[helium_txns_txn_routing_v1_size]; char f14[helium_txns_txn_security_exchange_v1_size]; char f15[helium_txns_txn_vars_v1_size]; char f16[helium_txns_txn_rewards_v1_size]; char f17[helium_txns_txn_token_burn_v1_size]; char f18[helium_txns_txn_dc_coinbase_v1_size];}))

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
